// Import necessary functions from Redux Toolkit Query
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Create an API using createApi from Redux Toolkit Query
const shoppingCartApi = createApi({
  // Configuration options for the API
  reducerPath: "shoppingCartApi", // A name for the slice of state for this API
  baseQuery: fetchBaseQuery({
    baseUrl: "https://redmangoapi.azurewebsites.net/api/", // Base URL for API requests
    prepareHeaders: (headers: Headers, api) => {
      const token = localStorage.getItem("token");
      token && headers.append("Authorization", "Bearer " + token);
    },
  }),
  tagTypes: ["ShoppingCarts"], // Define tag types for caching purposes
  endpoints: (builder) => ({
    // Define API endpoints using builder

    getShoppingCart: builder.query({
      query: (userId) => ({
        url: "shoppingcart",
        params: { userId: userId }, //parameter(userId) is required to access shopping cart
      }),
      providesTags: ["ShoppingCarts"], // Tags for caching and invalidation
    }),
    updateShoppingCart: builder.mutation({
      query: ({ menuItemId, updateQuantityBy, userId }) => ({
        url: "shoppingcart",
        method: "POST",
        params: {
          menuItemId,
          updateQuantityBy,
          userId,
        },
      }),
      invalidatesTags: ["ShoppingCarts"],
    }),
  }),
});

// Extract query hooks generated by createApi for each endpoint
export const { useGetShoppingCartQuery, useUpdateShoppingCartMutation } =
  shoppingCartApi;

// Export the configured API
export default shoppingCartApi;
